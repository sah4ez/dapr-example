// GENERATED BY 'T'ransport 'G'enerator. DO NOT EDIT.
package transport

import (
	"context"

	"github.com/sah4ez/dapr-example/interfaces"
	"github.com/sah4ez/dapr-example/interfaces/types"
)

type serverBalance struct {
	svc        interfaces.Balance
	getBalance BalanceGetBalance
}

type MiddlewareSetBalance interface {
	Wrap(m MiddlewareBalance)
	WrapGetBalance(m MiddlewareBalanceGetBalance)

	WithMetrics()
	WithLog()
}

func newServerBalance(svc interfaces.Balance) *serverBalance {
	return &serverBalance{
		getBalance: svc.GetBalance,
		svc:        svc,
	}
}

func (srv *serverBalance) Wrap(m MiddlewareBalance) {
	srv.svc = m(srv.svc)
	srv.getBalance = srv.svc.GetBalance
}

func (srv *serverBalance) GetBalance(ctx context.Context, id types.ID) (user types.Balance, err error) {
	return srv.getBalance(ctx, id)
}

func (srv *serverBalance) WrapGetBalance(m MiddlewareBalanceGetBalance) {
	srv.getBalance = m(srv.getBalance)
}

func (srv *serverBalance) WithMetrics() {
	srv.Wrap(metricsMiddlewareBalance)
}

func (srv *serverBalance) WithLog() {
	srv.Wrap(loggerMiddlewareBalance())
}
